node{ 

try{ //startting tag
    
   def MavenHome = tool name: 'maven3.8.5'
   
   echo "The Job name is: ${env.JOB_NAME}"
   echo "The Build number is: ${env.BUILD_NUMBER}"
   echo "The node name is: ${env.NODE_NAME}"
   
   properties([buildDiscarder(logRotator(artifactDaysToKeepStr: '', artifactNumToKeepStr: '5', daysToKeepStr: '', numToKeepStr: '5')), [$class: 'JobLocalConfiguration', changeReasonComment: ''], pipelineTriggers([pollSCM('* * * * *')])])
   
    //check out sourcecode
    stage('checkout stage'){
    git credentialsId: '0944b3d3-8067-44eb-92e0-0fa1c6531ca8', url: 'https://github.com/citibank-app-s/maven-web-application.git'
    }
    
 //build stage
 stage('build stage'){
 sh "${MavenHome}/bin/mvn clean package"
 }
 
/* //artifacts 
   stage('this is for artifact'){
     sh "${MavenHome}/bin/mvn sonar:sonar"
 }*/
 
 //upload artifacts
stage('this is for upload artifactsto the nexus'){
sh "${MavenHome}/bin/mvn deploy"
 }
 
 //deploy app into tomcat server
 stage('this is for deploye war file into tomcat'){
   sshagent(['33fe3531-ae1a-45c1-b77f-98361832d41c']) {
    sh "scp -o StrictHostKeyChecking=no target/maven-web-application.war ec2-user@172.31.38.137:/opt/apache-tomcat-9.0.68/webapps/"
    }
 }
 
 }//try closing
 catch(e){
 CurrentBuild.result = "FAILURE"
 }
 finally{
 sendSlackNotifications(currentBuild.result)
 }
 
}//node closing tag

//function for slacknotifications
def notifyBuild(String buildStatus = 'STARTED') {
  // build status of null means successful
  buildStatus =  buildStatus ?: 'SUCCESSFUL'

  // Default values
  def colorName = 'RED'
  def colorCode = '#FF0000'
  def subject = "${buildStatus}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'"
  def summary = "${subject} (${env.BUILD_URL})"

  // Override default values based on build status
  if (buildStatus == 'STARTED') {
    color = 'YELLOW'
    colorCode = '#FFFF00'
  } else if (buildStatus == 'SUCCESSFUL') {
    color = 'GREEN'
    colorCode = '#00FF00'
  } else {
    color = 'RED'
    colorCode = '#FF0000'
  }

  // Send notifications
  slackSend (color: colorCode, message: summary)
}
